diff --git a/buildSrc/build.gradle b/buildSrc/build.gradle
index d11375d044b..4d0f602a823 100644
--- a/buildSrc/build.gradle
+++ b/buildSrc/build.gradle
@@ -97,7 +97,7 @@ dependencies {
   api 'com.netflix.nebula:nebula-publishing-plugin:17.3.2'
   api 'com.netflix.nebula:gradle-info-plugin:9.2.0'
   api 'org.apache.rat:apache-rat:0.11'
-  api "org.elasticsearch:jna:5.7.0-1"
+  api "net.java.dev.jna:jna:5.7.0"
   api 'com.github.jengelman.gradle.plugins:shadow:6.1.0'
   // When upgrading forbidden apis, ensure dependency version is bumped in ThirdPartyPrecommitPlugin as well
   api 'de.thetaphi:forbiddenapis:3.1'
@@ -186,6 +186,8 @@ if (project != rootProject) {
     distribution project(':distribution:archives:linux-tar')
     distribution project(':distribution:archives:oss-linux-tar')
     distribution project(':distribution:archives:oss-linux-aarch64-tar')
+    distribution project(':distribution:archives:linux-s390x-tar')
+    distribution project(':distribution:archives:oss-linux-s390x-tar')

     integTestRuntimeOnly(project(":libs:elasticsearch-core"))
   }
diff --git a/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy
index 0fdba9ae14c..1b1cd52d6c4 100644
--- a/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy
+++ b/buildSrc/src/main/groovy/org/elasticsearch/gradle/plugin/PluginBuildPlugin.groovy
@@ -190,7 +190,7 @@ class PluginBuildPlugin implements Plugin<Project> {
             compileOnly "org.locationtech.jts:jts-core:${project.versions.jts}"
             compileOnly "org.apache.logging.log4j:log4j-api:${project.versions.log4j}"
             compileOnly "org.apache.logging.log4j:log4j-core:${project.versions.log4j}"
-            compileOnly "org.elasticsearch:jna:${project.versions.jna}"
+            compileOnly "net.java.dev.jna:jna:${project.versions.jna}"
         }
     }

diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java b/buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java
index ccc81954aab..81aebb11f85 100644
--- a/buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java
+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/Architecture.java
@@ -11,7 +11,8 @@ package org.elasticsearch.gradle;
 public enum Architecture {

     X64("x86_64"),
-    AARCH64("aarch64");
+    AARCH64("aarch64"),
+    S390X("s390x");

     public final String classifier;

@@ -27,6 +28,8 @@ public enum Architecture {
                 return X64;
             case "aarch64":
                 return AARCH64;
+            case "s390x":
+                return S390X;
             default:
                 throw new IllegalArgumentException("can not determine architecture from [" + architecture + "]");
         }
diff --git a/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java b/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java
index a07301c79a0..7fbfdd70e37 100644
--- a/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java
+++ b/buildSrc/src/main/java/org/elasticsearch/gradle/Jdk.java
@@ -24,7 +24,7 @@ import java.util.regex.Pattern;

 public class Jdk implements Buildable, Iterable<File> {

-    private static final List<String> ALLOWED_ARCHITECTURES = Collections.unmodifiableList(Arrays.asList("aarch64", "x64"));
+    private static final List<String> ALLOWED_ARCHITECTURES = Collections.unmodifiableList(Arrays.asList("aarch64", "x64", "s390x"));
     private static final List<String> ALLOWED_VENDORS = Collections.unmodifiableList(Arrays.asList("adoptopenjdk", "openjdk", "azul"));
     private static final List<String> ALLOWED_PLATFORMS = Collections.unmodifiableList(Arrays.asList("darwin", "linux", "windows", "mac"));
     private static final Pattern VERSION_PATTERN = Pattern.compile("(\\d+)(\\.\\d+\\.\\d+)?\\+(\\d+(?:\\.\\d+)?)(@([a-f0-9]{32}))?");
diff --git a/buildSrc/src/test/java/org/elasticsearch/gradle/JdkDownloadPluginTests.java b/buildSrc/src/test/java/org/elasticsearch/gradle/JdkDownloadPluginTests.java
index e835e816f4c..1151771c37a 100644
--- a/buildSrc/src/test/java/org/elasticsearch/gradle/JdkDownloadPluginTests.java
+++ b/buildSrc/src/test/java/org/elasticsearch/gradle/JdkDownloadPluginTests.java
@@ -84,7 +84,7 @@ public class JdkDownloadPluginTests extends GradleUnitTestCase {
             "11.0.2+33",
             "linux",
             "unknown",
-            "unknown architecture [unknown] for jdk [testjdk], must be one of [aarch64, x64]"
+            "unknown architecture [unknown] for jdk [testjdk], must be one of [aarch64, x64, s390x]"
         );
     }

diff --git a/buildSrc/version.properties b/buildSrc/version.properties
index b433236c34f..e8ebf45d3e1 100644
--- a/buildSrc/version.properties
+++ b/buildSrc/version.properties
@@ -18,7 +18,7 @@ log4j             = 2.11.1
 slf4j             = 1.6.2

 # when updating the JNA version, also update the version in buildSrc/build.gradle
-jna               = 5.7.0-1
+jna               = 5.7.0

 netty             = 4.1.49.Final
 joda              = 2.10.4
diff --git a/distribution/archives/build.gradle b/distribution/archives/build.gradle
index 772def3645b..478382c4e2e 100644
--- a/distribution/archives/build.gradle
+++ b/distribution/archives/build.gradle
@@ -160,6 +160,13 @@ distribution_archives {
     }
   }

+  linuxS390xTar {
+    archiveClassifier = 'linux-s390x'
+    content {
+      archiveFiles(modulesFiles(false, 'linux-s390x'), 'tar', 'linux', 's390x', false, true)
+    }
+  }
+
   linuxTar {
     archiveClassifier = 'linux-x86_64'
     content {
@@ -174,6 +181,13 @@ distribution_archives {
     }
   }

+  ossLinuxS390xTar {
+    archiveClassifier = 'linux-s390x'
+    content {
+      archiveFiles(modulesFiles(true, 'linux-s390x'), 'tar', 'linux', 's390x', true, true)
+    }
+  }
+
   ossLinuxTar {
     archiveClassifier = 'linux-x86_64'
     content {
diff --git a/distribution/archives/linux-s390x-tar/build.gradle b/distribution/archives/linux-s390x-tar/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/archives/linux-s390x-tar/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/archives/linux-s390x-tar/build.gradle.1 b/distribution/archives/linux-s390x-tar/build.gradle.1
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/archives/linux-s390x-tar/build.gradle.1
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/archives/oss-linux-s390x-tar/build.gradle b/distribution/archives/oss-linux-s390x-tar/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/archives/oss-linux-s390x-tar/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/build.gradle b/distribution/build.gradle
index f37f9cbfbc5..721f9236dad 100644
--- a/distribution/build.gradle
+++ b/distribution/build.gradle
@@ -293,7 +293,7 @@ configure(subprojects.findAll { ['archives', 'packages'].contains(it.name) }) {
   // Setup all required JDKs
   project.jdks {
     ['darwin', 'windows', 'linux'].each { platform ->
-      (platform == 'linux' || platform == 'darwin' ? ['x64', 'aarch64'] : ['x64']).each { architecture ->
+      (platform == 'linux' || platform == 'darwin' ? ['x64', 'aarch64', 's390x'] : ['x64']).each { architecture ->
         "bundled_${platform}_${architecture}" {
           it.platform = platform
           it.version = VersionProperties.getBundledJdk(platform)
@@ -372,7 +372,7 @@ configure(subprojects.findAll { ['archives', 'packages'].contains(it.name) }) {
         } else {
           buildModules = buildDefaultModulesTaskProvider
         }
-        List excludePlatforms = ['linux-x86_64', 'linux-aarch64', 'windows-x86_64', 'darwin-x86_64', 'darwin-aarch64']
+        List excludePlatforms = ['linux-x86_64', 'linux-aarch64', 'linux-s390x', 'windows-x86_64', 'darwin-x86_64', 'darwin-aarch64']
         if (platform != null) {
           excludePlatforms.remove(excludePlatforms.indexOf(platform))
         } else {
diff --git a/distribution/docker/build.gradle b/distribution/docker/build.gradle
index 7bb394458c9..e2b30bbb6a4 100644
--- a/distribution/docker/build.gradle
+++ b/distribution/docker/build.gradle
@@ -20,7 +20,9 @@ testFixtures.useFixture()
 configurations {
   aarch64DockerSource
   dockerSource
+  s390xDockerSource
   aarch64OssDockerSource
+  s390xOssDockerSource
   ossDockerSource
   transformLog4jJar
 }
@@ -28,7 +30,9 @@ configurations {
 dependencies {
   aarch64DockerSource project(path: ":distribution:archives:linux-aarch64-tar", configuration:"default")
   dockerSource project(path: ":distribution:archives:linux-tar", configuration:"default")
+  s390xDockerSource project(path: ":distribution:archives:linux-s390x-tar")
   aarch64OssDockerSource project(path: ":distribution:archives:oss-linux-aarch64-tar", configuration:"default")
+  s390xOssDockerSource project(path: ":distribution:archives:oss-linux-s390x-tar")
   ossDockerSource project(path: ":distribution:archives:oss-linux-tar", configuration:"default")
   transformLog4jJar project(path: ":distribution:docker:transform-log4j-config", configuration: "default")
 }
@@ -107,7 +111,7 @@ class SquashNewlinesFilter extends FilterReader {

 private static String buildPath(Architecture architecture, boolean oss, DockerBase base) {
   return 'build/' +
-    (architecture == Architecture.AARCH64 ? 'aarch64-' : '') +
+    (architecture == Architecture.AARCH64 ? 'aarch64-' : architecture == Architecture.S390X ? 's390x-' : '') +
     (oss ? 'oss-' : '') +
     (base == DockerBase.UBI ? 'ubi-' : '') +
     (base == DockerBase.UBI ? 'ubi-' : (base == DockerBase.IRON_BANK ? 'ironbank-' : '')) +
@@ -116,7 +120,7 @@ private static String buildPath(Architecture architecture, boolean oss, DockerBa

 private static String taskName(String prefix, Architecture architecture, boolean oss, DockerBase base, String suffix) {
   return prefix +
-    (architecture == Architecture.AARCH64 ? 'Aarch64' : '') +
+    (architecture == Architecture.AARCH64 ? 'Aarch64' : architecture == Architecture.S390X ? 's390x-' : '') +
     (oss ? 'Oss' : '') +
     (base == DockerBase.UBI ? 'Ubi' : (base == DockerBase.IRON_BANK ? 'IronBank' : '')) +
     suffix
@@ -197,6 +201,12 @@ void addCopyDockerContextTask(Architecture architecture, boolean oss, DockerBase
       } else {
         from configurations.aarch64DockerSource
       }
+    } else if (architecture == Architecture.S390X) {
+      if (oss){
+        from configurations.s390xOssDockerSource
+      } else {
+        from configurations.s390xDockerSource
+      }
     } else {
       if (oss) {
         from configurations.ossDockerSource
@@ -232,7 +242,7 @@ tasks.register("copyNodeKeyMaterial", Sync) {
 elasticsearch_distributions {
   Architecture.values().each { eachArchitecture ->
     Flavor.values().each { distroFlavor ->
-      "docker_$distroFlavor${ eachArchitecture == Architecture.AARCH64 ? '_aarch64' : '' }" {
+      "docker_$distroFlavor${ eachArchitecture == Architecture.AARCH64 ? '_aarch64' : eachArchitecture == Architecture.S390X ? '_s390x' : '' }" {
         architecture = eachArchitecture
         flavor = distroFlavor
         type = 'docker'
diff --git a/distribution/docker/docker-s390x-build-context/build.gradle b/distribution/docker/docker-s390x-build-context/build.gradle
new file mode 100644
index 00000000000..87ebb4ae41c
--- /dev/null
+++ b/distribution/docker/docker-s390x-build-context/build.gradle
@@ -0,0 +1,14 @@
+import org.elasticsearch.gradle.DockerBase
+
+apply plugin: 'base'
+
+tasks.register("buildDockerBuildContext", Tar) {
+  archiveExtension = 'tar.gz'
+  compression = Compression.GZIP
+  archiveClassifier = "docker-build-context"
+  archiveBaseName = "elasticsearch-s390x"
+  // Non-local builds don't need to specify an architecture.
+  with dockerBuildContext(null, false, DockerBase.CENTOS, false)
+}
+
+tasks.named("assemble").configure {dependsOn "buildDockerBuildContext"}
diff --git a/distribution/docker/docker-s390x-export/build.gradle b/distribution/docker/docker-s390x-export/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/docker/docker-s390x-export/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/docker/oss-docker-s390x-build-context/build.gradle b/distribution/docker/oss-docker-s390x-build-context/build.gradle
new file mode 100644
index 00000000000..40a22f7e064
--- /dev/null
+++ b/distribution/docker/oss-docker-s390x-build-context/build.gradle
@@ -0,0 +1,14 @@
+import org.elasticsearch.gradle.DockerBase
+
+apply plugin: 'base'
+
+tasks.register("buildOssDockerBuildContext", Tar) {
+  archiveExtension = 'tar.gz'
+  compression = Compression.GZIP
+  archiveClassifier = "docker-build-context"
+  archiveBaseName = "elasticsearch-s390x-oss"
+  // Non-local builds don't need to specify an architecture.
+  with dockerBuildContext(null, true, DockerBase.CENTOS, false)
+}
+
+tasks.named("assemble").configure { dependsOn "buildOssDockerBuildContext" }
diff --git a/distribution/docker/oss-docker-s390x-export/build.gradle b/distribution/docker/oss-docker-s390x-export/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/docker/oss-docker-s390x-export/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/packages/build.gradle b/distribution/packages/build.gradle
index f34a363cde1..907bdc64474 100644
--- a/distribution/packages/build.gradle
+++ b/distribution/packages/build.gradle
@@ -99,6 +99,8 @@ Closure commonPackageConfig(String type, boolean oss, boolean jdk, String archit
     if (type == 'deb') {
       if (architecture == 'x64') {
         arch('amd64')
+      } else if (architecture == 's390x') {
+        arch('s390x')
       } else {
         assert architecture == 'aarch64' : architecture
         arch('arm64')
@@ -107,6 +109,8 @@ Closure commonPackageConfig(String type, boolean oss, boolean jdk, String archit
       assert type == 'rpm' : type
       if (architecture == 'x64') {
         arch('X86_64')
+      } else if (architecture == 's390x') {
+        arch('s390x')
       } else {
         assert architecture == 'aarch64' : architecture
         arch('aarch64')
@@ -145,7 +149,7 @@ Closure commonPackageConfig(String type, boolean oss, boolean jdk, String archit
         with libFiles(oss)
       }
       into('modules') {
-        with modulesFiles(oss, 'linux-' + ((architecture == 'x64') ? 'x86_64' : architecture))
+        with modulesFiles(oss, 'linux-' + ((architecture == 'x64') ? 'x86_64' : (architecture == 's390x') ? 's390x' : architecture))
       }
       if (jdk) {
         into('jdk') {
@@ -346,6 +350,10 @@ tasks.register('buildAarch64Deb', Deb) {
   configure(commonDebConfig(false, true, 'aarch64'))
 }

+tasks.register('buildS390xDeb', Deb) {
+  configure(commonDebConfig(false, true, 's390x'))
+}
+
 tasks.register('buildDeb', Deb) {
   configure(commonDebConfig(false, true, 'x64'))
 }
@@ -354,6 +362,10 @@ tasks.register('buildAarch64OssDeb', Deb) {
   configure(commonDebConfig(true, true, 'aarch64'))
 }

+tasks.register('buildS390xOssDeb', Deb) {
+  configure(commonDebConfig(true, true, 's390x'))
+}
+
 tasks.register('buildOssDeb', Deb) {
   configure(commonDebConfig(true, true, 'x64'))
 }
@@ -399,6 +411,10 @@ tasks.register('buildAarch64Rpm', Rpm) {
   configure(commonRpmConfig(false, true, 'aarch64'))
 }

+tasks.register('buildS390xRpm', Rpm) {
+  configure(commonRpmConfig(false, true, 's390x'))
+}
+
 tasks.register('buildRpm', Rpm) {
   configure(commonRpmConfig(false, true, 'x64'))
 }
@@ -407,6 +423,10 @@ tasks.register('buildAarch64OssRpm', Rpm) {
   configure(commonRpmConfig(true, true, 'aarch64'))
 }

+tasks.register('buildS390xOssRpm', Rpm) {
+  configure(commonRpmConfig(true, true, 's390x'))
+}
+
 tasks.register('buildOssRpm', Rpm) {
   configure(commonRpmConfig(true, true, 'x64'))
 }
diff --git a/distribution/packages/s390x-deb/build.gradle b/distribution/packages/s390x-deb/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/packages/s390x-deb/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/packages/s390x-oss-deb/build.gradle b/distribution/packages/s390x-oss-deb/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/packages/s390x-oss-deb/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/packages/s390x-oss-rpm/build.gradle b/distribution/packages/s390x-oss-rpm/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/packages/s390x-oss-rpm/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/distribution/packages/s390x-rpm/build.gradle b/distribution/packages/s390x-rpm/build.gradle
new file mode 100644
index 00000000000..4a6dde5fc0c
--- /dev/null
+++ b/distribution/packages/s390x-rpm/build.gradle
@@ -0,0 +1,2 @@
+// This file is intentionally blank. All configuration of the
+// distribution is done in the parent project.
diff --git a/server/build.gradle b/server/build.gradle
index 69343342d65..039080aab6b 100644
--- a/server/build.gradle
+++ b/server/build.gradle
@@ -108,8 +108,7 @@ dependencies {
   api "org.apache.logging.log4j:log4j-api:${versions.log4j}"
   api "org.apache.logging.log4j:log4j-core:${versions.log4j}", optional

-  // repackaged jna with native bits linked against all elastic supported platforms
-  api "org.elasticsearch:jna:${versions.jna}"
+  api "net.java.dev.jna:jna:${versions.jna}"

   testImplementation(project(":test:framework")) {
     // tests use the locally compiled version of server
diff --git a/server/licenses/jna-5.7.0-1.jar.sha1 b/server/licenses/jna-5.7.0-1.jar.sha1
deleted file mode 100644
index d41fa4c8990..00000000000
--- a/server/licenses/jna-5.7.0-1.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-8ffc051522e63292eaf757d89353c14e94233988
\ No newline at end of file
diff --git a/server/licenses/jna-5.7.0.jar.sha1 b/server/licenses/jna-5.7.0.jar.sha1
new file mode 100644
index 00000000000..5a10e26ac6b
--- /dev/null
+++ b/server/licenses/jna-5.7.0.jar.sha1
@@ -0,0 +1 @@
+a04e3db7cf0011d1b6a4bcfaee30ab20f077014b
diff --git a/settings.gradle b/settings.gradle
index 978dfb5d19b..ce32709e150 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -31,34 +31,45 @@ List projects = [
   'distribution:archives:oss-no-jdk-darwin-aarch64-tar',
   'distribution:archives:no-jdk-darwin-aarch64-tar',
   'distribution:archives:oss-linux-aarch64-tar',
+  'distribution:archives:oss-linux-s390x-tar',
   'distribution:archives:oss-linux-tar',
   'distribution:archives:linux-aarch64-tar',
+  'distribution:archives:linux-s390x-tar',
   'distribution:archives:linux-tar',
   'distribution:archives:oss-no-jdk-linux-tar',
   'distribution:archives:no-jdk-linux-tar',
   'distribution:docker',
   'distribution:docker:docker-aarch64-build-context',
   'distribution:docker:docker-aarch64-export',
+  'distribution:docker:docker-s390x-build-context',
+  'distribution:docker:docker-s390x-export',
   'distribution:docker:docker-build-context',
   'distribution:docker:docker-export',
   'distribution:docker:ironbank-docker-build-context',
   'distribution:docker:oss-docker-aarch64-build-context',
   'distribution:docker:oss-docker-aarch64-export',
+  'distribution:docker:oss-docker-s390x-build-context',
+  'distribution:docker:oss-docker-s390x-export',
   'distribution:docker:oss-docker-build-context',
   'distribution:docker:oss-docker-export',
   'distribution:docker:transform-log4j-config',
   'distribution:docker:ubi-docker-aarch64-export',
+  'distribution:docker:ubi-docker-s390x-export',
   'distribution:docker:ubi-docker-build-context',
   'distribution:docker:ubi-docker-export',
   'distribution:packages:aarch64-oss-deb',
+  'distribution:packages:s390x-oss-deb',
   'distribution:packages:oss-deb',
   'distribution:packages:aarch64-deb',
+  'distribution:packages:s390x-deb',
   'distribution:packages:deb',
   'distribution:packages:oss-no-jdk-deb',
   'distribution:packages:no-jdk-deb',
   'distribution:packages:aarch64-oss-rpm',
+  'distribution:packages:s390x-oss-rpm',
   'distribution:packages:oss-rpm',
   'distribution:packages:aarch64-rpm',
+  'distribution:packages:s390x-rpm',
   'distribution:packages:rpm',
   'distribution:packages:oss-no-jdk-rpm',
   'distribution:packages:no-jdk-rpm',
diff --git a/x-pack/plugin/sql/qa/server/build.gradle b/x-pack/plugin/sql/qa/server/build.gradle
index 82d8d5e5423..cc11caeb66a 100644
--- a/x-pack/plugin/sql/qa/server/build.gradle
+++ b/x-pack/plugin/sql/qa/server/build.gradle
@@ -32,7 +32,7 @@ dependencies {
   api "org.jline:jline-reader:${jlineVersion}"
   api "org.jline:jline-style:${jlineVersion}"

-  testRuntimeOnly "org.elasticsearch:jna:${versions.jna}"
+  testRuntimeOnly "net.java.dev.jna:jna:${versions.jna}"
 }

 // this is just a test fixture used by other projects and not in production
@@ -95,7 +95,7 @@ subprojects {
     testRuntimeOnly "org.jline:jline-reader:${jlineVersion}"
     testRuntimeOnly "org.jline:jline-style:${jlineVersion}"

-    testRuntimeOnly "org.elasticsearch:jna:${versions.jna}"
+    testRuntimeOnly "net.java.dev.jna:jna:${versions.jna}"

     // spatial dependency
     testRuntimeOnly project(path: xpackModule('spatial'))
diff --git a/x-pack/plugin/sql/sql-cli/build.gradle b/x-pack/plugin/sql/sql-cli/build.gradle
index a30a38b2e6d..73670c2c594 100644
--- a/x-pack/plugin/sql/sql-cli/build.gradle
+++ b/x-pack/plugin/sql/sql-cli/build.gradle
@@ -30,7 +30,7 @@ dependencies {
   api xpackProject('plugin:sql:sql-action')
   api project(":libs:elasticsearch-cli")
   api project(':libs:elasticsearch-x-content')
-  runtimeOnly "org.elasticsearch:jna:${versions.jna}"
+  runtimeOnly "net.java.dev.jna:jna:${versions.jna}"
   testImplementation project(":test:framework")
 }

diff --git a/x-pack/plugin/sql/sql-cli/licenses/jna-5.7.0-1.jar.sha1 b/x-pack/plugin/sql/sql-cli/licenses/jna-5.7.0-1.jar.sha1
deleted file mode 100644
index d41fa4c8990..00000000000
--- a/x-pack/plugin/sql/sql-cli/licenses/jna-5.7.0-1.jar.sha1
+++ /dev/null
@@ -1 +0,0 @@
-8ffc051522e63292eaf757d89353c14e94233988
\ No newline at end of file
diff --git a/x-pack/plugin/sql/sql-cli/licenses/jna-5.7.0.jar.sha1 b/x-pack/plugin/sql/sql-cli/licenses/jna-5.7.0.jar.sha1
new file mode 100644
index 00000000000..5a10e26ac6b
--- /dev/null
+++ b/x-pack/plugin/sql/sql-cli/licenses/jna-5.7.0.jar.sha1
@@ -0,0 +1 @@
+a04e3db7cf0011d1b6a4bcfaee30ab20f077014b
