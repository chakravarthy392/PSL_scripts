--- originalfile	2018-10-31 05:07:33.978984000 -0400
+++ updatedfile	2018-10-12 00:27:28.572759000 -0400
@@ -1,7 +1,7 @@
 ARG QEMU_IMAGE=calico/go-build:latest
 FROM ${QEMU_IMAGE} as qemu
 
-FROM s390x/alpine:3.8
+FROM s390x/alpine:3.8 as base
 MAINTAINER LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)
 
 # Enable non-native builds of this image on an amd64 hosts.
@@ -12,15 +12,19 @@
 
 # Since our binary isn't designed to run as PID 1, run it via the tini init daemon.
 RUN apk add --update tini
-ENTRYPOINT ["/sbin/tini", "--"]
 
-ADD typha.cfg /etc/calico/typha.cfg
+FROM scratch
+COPY --from=base /sbin/tini /sbin/tini
+COPY --from=base /lib/ld-musl-s390x.so.1 /lib/libc.musl-s390x.so.1  /lib/
 
 # Put out binary in /code rather than directly in /usr/bin.  This allows the downstream builds
 # to more easily extract the build artefacts from the container.
-RUN mkdir /code
 ADD bin/calico-typha-s390x /code/calico-typha
+ADD typha.cfg /etc/calico/typha.cfg
+
 WORKDIR /code
+ENV PATH="$PATH:/code"
 
 # Run Typha by default
+ENTRYPOINT ["/sbin/tini", "--"]
 CMD ["calico-typha"]
