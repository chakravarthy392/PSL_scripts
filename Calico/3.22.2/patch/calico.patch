diff --git a/apiserver/Makefile b/apiserver/Makefile
index c495fc9ea..7accedf88 100644
--- a/apiserver/Makefile
+++ b/apiserver/Makefile
@@ -78,6 +78,7 @@ endif
 # TODO: re-enable these linters !
 LINT_ARGS := --disable gosimple,govet,structcheck,errcheck,goimports,unused,ineffassign,staticcheck,deadcode,typecheck --timeout 5m
 
+LOCAL_IP_ENV:=$(shell ip route get 8.8.8.8 | head -1 | awk '{print $$7}')
 ###############################################################################
 # CI/CD
 ###############################################################################
@@ -163,7 +164,7 @@ run-etcd: stop-etcd
 	docker run --detach \
 	--net=host \
 	--entrypoint=/usr/local/bin/etcd \
-	--name calico-etcd quay.io/coreos/etcd:v3.1.7 \
+	--name calico-etcd quay.io/coreos/etcd:v3.5.3 \
 	--advertise-client-urls "http://$(LOCAL_IP_ENV):2379,http://127.0.0.1:2379,http://$(LOCAL_IP_ENV):4001,http://127.0.0.1:4001" \
 	--listen-client-urls "http://0.0.0.0:2379,http://0.0.0.0:4001"
 
diff --git a/app-policy/Makefile b/app-policy/Makefile
index b3d4250de..76afd2c5c 100644
--- a/app-policy/Makefile
+++ b/app-policy/Makefile
@@ -113,7 +113,7 @@ proto/felixbackend.pb.go: proto/felixbackend.proto
 		      $(PROTOC_CONTAINER) \
 		      $(PROTOC_IMPORTS) \
 		      proto/*.proto \
-		      --gogofast_out=plugins=grpc:proto
+		      --gogofaster_out=plugins=grpc:proto
 	$(MAKE) fix
 
 proto/healthz.pb.go: proto/healthz.proto
@@ -121,7 +121,7 @@ proto/healthz.pb.go: proto/healthz.proto
 		      $(PROTOC_CONTAINER) \
 		      $(PROTOC_IMPORTS) \
 		      proto/*.proto \
-		      --gogofast_out=plugins=grpc:proto
+		      --gogofaster_out=plugins=grpc:proto
 	$(MAKE) fix
 
 
diff --git a/calico/Makefile b/calico/Makefile
index 6e42acdae..20a7d2f25 100644
--- a/calico/Makefile
+++ b/calico/Makefile
@@ -190,17 +190,17 @@ endif
 bin/helm: bin/helm3
 	mkdir -p bin
 	$(eval TMP := $(shell mktemp -d))
-	wget -q https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz -O $(TMP)/helm.tar.gz
+	wget -q https://get.helm.sh/helm-v2.16.3-linux-s390x.tar.gz -O $(TMP)/helm.tar.gz
 	tar -zxvf $(TMP)/helm.tar.gz -C $(TMP)
-	mv $(TMP)/linux-amd64/helm bin/helm
+	mv $(TMP)/linux-s390x/helm bin/helm
 
 helm-deps: bin/helm3 bin/helm
 bin/helm3:
 	mkdir -p bin
 	$(eval TMP := $(shell mktemp -d))
-	wget -q https://get.helm.sh/helm-v3.3.1-linux-amd64.tar.gz -O $(TMP)/helm3.tar.gz
+	wget -q https://get.helm.sh/helm-v3.3.1-linux-s390x.tar.gz -O $(TMP)/helm3.tar.gz
 	tar -zxvf $(TMP)/helm3.tar.gz -C $(TMP)
-	mv $(TMP)/linux-amd64/helm bin/helm3
+	mv $(TMP)/linux-s390x/helm bin/helm3
 
 .PHONY: values.yaml
 values.yaml: _includes/charts/calico/values.yaml _includes/charts/tigera-operator/values.yaml
diff --git a/calicoctl/tests/fv/utils/calicoctl.go b/calicoctl/tests/fv/utils/calicoctl.go
index de99a34cd..f933ad40a 100644
--- a/calicoctl/tests/fv/utils/calicoctl.go
+++ b/calicoctl/tests/fv/utils/calicoctl.go
@@ -23,7 +23,7 @@ import (
 	log "github.com/sirupsen/logrus"
 )
 
-var calicoctl = "/go/src/github.com/projectcalico/calico/calicoctl/bin/calicoctl-linux-amd64"
+var calicoctl = "/go/src/github.com/projectcalico/calico/calicoctl/bin/calicoctl-linux-s390x"
 var version_helper = "/go/src/github.com/projectcalico/calico/calicoctl/tests/fv/helper/bin/calico_version_helper"
 
 func getEnv(kdd bool) []string {
diff --git a/calicoctl/tests/st/utils/utils.py b/calicoctl/tests/st/utils/utils.py
index 61a16e23b..76c63f61c 100644
--- a/calicoctl/tests/st/utils/utils.py
+++ b/calicoctl/tests/st/utils/utils.py
@@ -238,7 +238,7 @@ def calicoctl(command, data=None, load_as_stdin=False, format="yaml", only_stdou
     elif data and not load_as_stdin:
         option_file = ' -f /tmp/input-data'
 
-    calicoctl_bin = os.environ.get("CALICOCTL", "/code/bin/calicoctl-linux-amd64")
+    calicoctl_bin = os.environ.get("CALICOCTL", "/code/bin/calicoctl-linux-s390x")
 
     if allowVersionMismatch:
         calicoctl_bin += " --allow-version-mismatch"
diff --git a/cni-plugin/Dockerfile.s390x b/cni-plugin/Dockerfile.s390x
index e650b9b65..4133f3882 100644
--- a/cni-plugin/Dockerfile.s390x
+++ b/cni-plugin/Dockerfile.s390x
@@ -1,4 +1,6 @@
-FROM s390x/debian:9.8-slim
+ARG UBI_IMAGE
+
+FROM ${UBI_IMAGE} as ubi
 
 LABEL maintainer "LoZ Open Source Ecosystem (https://www.ibm.com/developerworks/community/groups/community/lozopensource)"
 
@@ -14,5 +16,5 @@ COPY --from=ubi /opt/cni/bin /opt/cni/bin
 ADD bin/s390x/ /opt/cni/bin/
 
 ENV PATH=$PATH:/opt/cni/bin
-WORKDIR /opt/cni/bin]
+WORKDIR /opt/cni/bin
 CMD ["/opt/cni/bin/install"]
diff --git a/felix/docker-image/Dockerfile.s390x b/felix/docker-image/Dockerfile.s390x
index 6608744e5..bbdd5801f 100644
--- a/felix/docker-image/Dockerfile.s390x
+++ b/felix/docker-image/Dockerfile.s390x
@@ -3,7 +3,7 @@ FROM ${QEMU_IMAGE} as qemu
 
 FROM calico/bpftool:v5.3-s390x as bpftool
 
-FROM s390x/alpine:3.8 as base
+FROM debian:11-slim
 
 # Enable non-native builds of this image on an amd64 hosts.
 # This must be the first RUN command in this file!
@@ -11,8 +11,34 @@ FROM s390x/alpine:3.8 as base
 # when running on a kernel >= 4.8, this will become less relevant
 COPY --from=qemu /usr/bin/qemu-s390x-static /usr/bin/
 
-# Install our dependencies.
-RUN apk --no-cache add ip6tables tini ipset iputils iproute2 conntrack-tools file
+# Install remaining runtime deps required for felix from the global repository
+RUN apt-get update && apt-get install -y \
+    ipset \
+    iptables \
+    iproute2 \
+    iputils-arping \
+    iputils-ping \
+    iputils-tracepath \
+    # Need arp
+    net-tools \
+    conntrack \
+    runit \
+    # Need kmod to ensure ip6tables-save works correctly
+    kmod \
+    # Need netbase in order for ipset to work correctly
+    # See https://github.com/kubernetes/kubernetes/issues/68703
+    netbase \
+    # Also needed (provides utilities for browsing procfs like ps)
+    procps \
+    ca-certificates
+
+# Default to the xtables backend of iptables.
+RUN update-alternatives --set iptables /usr/sbin/iptables-legacy
+RUN update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
+
+# Install tini, the init daemon we use.
+ENV TINI_VERSION v0.18.0
+ADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-static-s390x /sbin/tini
 
 ADD felix.cfg /etc/calico/felix.cfg
 ADD calico-felix-wrapper /usr/bin
@@ -20,11 +46,15 @@ ADD calico-felix-wrapper /usr/bin
 # Put our binary in /code rather than directly in /usr/bin.  This allows the downstream builds
 # to more easily extract the Felix build artefacts from the container.
 ADD bin/calico-felix-s390x /code/calico-felix
+ADD bin/calico-bpf /usr/bin/calico-bpf
+ADD bpf/bin/* /usr/lib/calico/bpf/
 RUN ln -s /code/calico-felix /usr/bin
 COPY --from=bpftool /bpftool /usr/bin
 WORKDIR /code
 
 # Since our binary isn't designed to run as PID 1, run it via the tini init daemon.
+RUN chmod +x /sbin/tini
 ENTRYPOINT ["/sbin/tini", "--"]
+
 # Run felix (via the wrapper script) by default
-CMD ["calico-felix-wrapper"]
+CMD ["/usr/bin/calico-felix-wrapper"]
diff --git a/felix/fv/utils/utils.go b/felix/fv/utils/utils.go
index e229fba39..9f25ffc7a 100644
--- a/felix/fv/utils/utils.go
+++ b/felix/fv/utils/utils.go
@@ -44,7 +44,7 @@ import (
 type EnvConfig struct {
 	FelixImage   string `default:"calico/felix:latest"`
 	EtcdImage    string `default:"quay.io/coreos/etcd"`
-	K8sImage     string `default:"gcr.io/google_containers/hyperkube-amd64:v1.17.4"`
+	K8sImage     string `default:"gcr.io/google_containers/hyperkube-s390x:v1.18.6"`
 	TyphaImage   string `default:"calico/typha:latest"` // Note: this is overridden in the Makefile!
 	BusyboxImage string `default:"busybox:latest"`
 }
diff --git a/lib.Makefile b/lib.Makefile
index 57554685c..6def65899 100644
--- a/lib.Makefile
+++ b/lib.Makefile
@@ -225,9 +225,12 @@ endif
 ifeq ($(ARCH),armv7)
 TARGET_PLATFORM=--platform=linux/arm/v7
 endif
+ifeq ($(ARCH),s390x)
+TARGET_PLATFORM=--platform=linux/s390x
+endif
 
 # DOCKER_BUILD is the base build command used for building all images.
-DOCKER_BUILD=docker buildx build --pull \
+DOCKER_BUILD=docker buildx build \
 	     --build-arg QEMU_IMAGE=$(CALICO_BUILD) \
 	     --build-arg UBI_IMAGE=$(UBI_IMAGE) \
 	     --build-arg GIT_VERSION=$(GIT_VERSION) $(TARGET_PLATFORM)
diff --git a/metadata.mk b/metadata.mk
index 5e61e8bf9..a45c8545c 100644
--- a/metadata.mk
+++ b/metadata.mk
@@ -11,7 +11,7 @@ KUBECTL_VERSION = v1.23.0
 
 # Version of various tools used in the build and tests.
 COREDNS_VERSION=1.5.2
-ETCD_VERSION=v3.3.7
+ETCD_VERSION=v3.5.3
 PROTOC_VER=v0.1
 UBI_VERSION=8.5
 
diff --git a/node/calico_test/Dockerfile.s390x.calico_test b/node/calico_test/Dockerfile.s390x.calico_test
index 6601a03c3..974233ef6 100644
--- a/node/calico_test/Dockerfile.s390x.calico_test
+++ b/node/calico_test/Dockerfile.s390x.calico_test
@@ -59,7 +59,7 @@ RUN apk update \
 
 # Install etcdctl
 COPY pkg /pkg/
-RUN tar -xzf pkg/etcd-v3.3.7-linux-s390x.tar.gz -C /usr/local/bin/
+RUN tar -xzf pkg/etcd-v3.5.3-linux-s390x.tar.gz -C /usr/local/bin/
 
 # The container is used by mounting the code-under-test to /code
 WORKDIR /code/
