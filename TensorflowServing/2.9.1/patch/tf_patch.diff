diff --git a/tensorflow/core/framework/BUILD b/tensorflow/core/framework/BUILD
index bfe76608c5a..b7d11ce9003 100644
--- a/tensorflow/core/framework/BUILD
+++ b/tensorflow/core/framework/BUILD
@@ -806,6 +806,7 @@ tf_cuda_library(
         "log_memory.h",
         "register_types.h",
         "tensor.h",
+        "tensor_util.h",
         "typed_allocator.h",
         "types.h",
         "variant.h",
@@ -858,7 +859,7 @@ tf_cuda_library(
         "//tensorflow/core/platform:types",
         "//tensorflow/core/public:version",
         "//tensorflow/core/util:managed_stack_trace",
-        "//tensorflow/core/util/tensor_bundle",
+        "//tensorflow/core/util/tensor_bundle:byteswaparray",
         "//third_party/eigen3",
         "@com_google_absl//absl/memory",
         "@com_google_absl//absl/strings",
diff --git a/tensorflow/core/framework/tensor.cc b/tensorflow/core/framework/tensor.cc
index 567413e7bf9..cd00ee203a5 100644
--- a/tensorflow/core/framework/tensor.cc
+++ b/tensorflow/core/framework/tensor.cc
@@ -59,7 +59,7 @@ limitations under the License.
 #include "tensorflow/core/platform/protobuf.h"
 #include "tensorflow/core/platform/tensor_coding.h"
 #include "tensorflow/core/platform/types.h"
-#include "tensorflow/core/util/tensor_bundle/byte_swap.h"
+#include "tensorflow/core/util/tensor_bundle/byte_swap_array.h"

 namespace tensorflow {

diff --git a/tensorflow/core/util/tensor_bundle/BUILD b/tensorflow/core/util/tensor_bundle/BUILD
index 9e8b80d27e4..57cd6c88d8d 100644
--- a/tensorflow/core/util/tensor_bundle/BUILD
+++ b/tensorflow/core/util/tensor_bundle/BUILD
@@ -25,6 +25,8 @@ package(
 filegroup(
     name = "mobile_srcs",
     srcs = [
+        "byte_swap_array.cc",
+        "byte_swap_array.h",
         "byte_swap.cc",
         "byte_swap.h",
         "naming.cc",
@@ -42,17 +44,16 @@ alias(
 cc_library(
     name = "tensor_bundle",
     srcs = [
-        "byte_swap.cc",
         "tensor_bundle.cc",
     ],
     hdrs = [
-        "byte_swap.h",
         "tensor_bundle.h",
     ],
     copts = tf_copts() + if_not_windows(["-Wno-sign-compare"]),
     linkopts = if_windows(["-DEFAULTLIB:ws2_32.lib"]),
     deps = [
         ":naming",
+        ":byteswap",
         "//tensorflow/core:core_cpu_lib",
         "//tensorflow/core:framework",
         "//tensorflow/core:framework_internal",
@@ -78,6 +79,26 @@ cc_library(
     deps = ["//tensorflow/core:lib"],
 )
 
+cc_library(
+    name = "byteswaparray",
+    srcs = ["byte_swap_array.cc"],
+    hdrs = ["byte_swap_array.h"],
+    deps = [
+        "//tensorflow/core/platform:status",
+        "//tensorflow/core/platform:errors",
+    ],
+)
+
+cc_library(
+    name = "byteswap",
+    srcs = ["byte_swap.cc"],
+    hdrs = ["byte_swap.h"],
+    deps = [
+        ":byteswaparray",
+        "//tensorflow/core:framework",
+    ],
+)
+
 tf_cc_test(
     name = "tensor_bundle_test",
     srcs = ["tensor_bundle_test.cc"],
diff --git a/tensorflow/core/util/tensor_bundle/byte_swap.cc b/tensorflow/core/util/tensor_bundle/byte_swap.cc
index 631aceac104..628e5c68192 100644
--- a/tensorflow/core/util/tensor_bundle/byte_swap.cc
+++ b/tensorflow/core/util/tensor_bundle/byte_swap.cc
@@ -14,13 +14,11 @@ limitations under the License.
 ==============================================================================*/
 
 #include "tensorflow/core/util/tensor_bundle/byte_swap.h"
-
 #include "tensorflow/core/framework/attr_value.pb.h"
 #include "tensorflow/core/framework/function.pb.h"
 #include "tensorflow/core/framework/graph.pb.h"
 #include "tensorflow/core/framework/node_def.pb.h"
 #include "tensorflow/core/framework/tensor.pb.h"
-#include "tensorflow/core/lib/core/status.h"
 
 namespace tensorflow {
 
@@ -111,34 +109,6 @@ Status ByteSwapBuffer(char* buff, size_t size, DataType dtype,
 
 }  // namespace
 
-Status ByteSwapArray(char* array, size_t bytes_per_elem, int array_len) {
-  if (bytes_per_elem == 1) {
-    // No-op
-    return Status::OK();
-  } else if (bytes_per_elem == 2) {
-    auto array_16 = reinterpret_cast<uint16_t*>(array);
-    for (int i = 0; i < array_len; i++) {
-      array_16[i] = BYTE_SWAP_16(array_16[i]);
-    }
-    return Status::OK();
-  } else if (bytes_per_elem == 4) {
-    auto array_32 = reinterpret_cast<uint32_t*>(array);
-    for (int i = 0; i < array_len; i++) {
-      array_32[i] = BYTE_SWAP_32(array_32[i]);
-    }
-    return Status::OK();
-  } else if (bytes_per_elem == 8) {
-    auto array_64 = reinterpret_cast<uint64_t*>(array);
-    for (int i = 0; i < array_len; i++) {
-      array_64[i] = BYTE_SWAP_64(array_64[i]);
-    }
-    return Status::OK();
-  } else {
-    return errors::Unimplemented("Byte-swapping of ", bytes_per_elem,
-                                 "-byte values not supported.");
-  }
-}
-
 Status ByteSwapTensor(Tensor* t) {
   char* buff = const_cast<char*>((t->tensor_data().data()));
   return ByteSwapBuffer(buff, t->tensor_data().size(), t->dtype(),
diff --git a/tensorflow/core/util/tensor_bundle/byte_swap.h b/tensorflow/core/util/tensor_bundle/byte_swap.h
index a51153385f8..ad6843df43c 100644
--- a/tensorflow/core/util/tensor_bundle/byte_swap.h
+++ b/tensorflow/core/util/tensor_bundle/byte_swap.h
@@ -17,89 +17,12 @@ limitations under the License.
 #define TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_H_
 
 #include "tensorflow/core/framework/tensor.h"
-#include "tensorflow/core/lib/core/status.h"
 #include "tensorflow/core/platform/byte_order.h"
 #include "tensorflow/core/protobuf/meta_graph.pb.h"
-
-// Define basic byte swapping operations.
-// These operations must be macros to use compiler intrinsics.
-// Note that the code here is written for portability, not speed. Byte swapping
-// only happens when importing a checkpoint from one hardware architecture onto
-// a different architecture. If these operations become part of a fast path,
-// then the function ByteSwapArray() below should be rewritten to use
-// architecture-appropriate SIMD instructions that swap multiple words at once.
-
-#if defined(__linux__)
-
-// Use the Gnu byte swap macros when available.  See bswap(3) for more info.
-#include <byteswap.h>
-#define BYTE_SWAP_16(x) bswap_16(x)
-#define BYTE_SWAP_32(x) bswap_32(x)
-#define BYTE_SWAP_64(x) bswap_64(x)
-
-#elif defined(PLATFORM_WINDOWS)
-
-// On windows, byte-swapping is in winsock.h, and winsock2.h has a version of
-// of htonl that can byte-swap 64-bit values.
-#include <winsock2.h>
-#define BYTE_SWAP_16(x) htons(x)
-#define BYTE_SWAP_32(x) htonl(x)
-// At the moment the 64-bit and 128-bit byte-swapping routines in Winsock2 are
-// disabled in TensorFlow's standard Windows build environment, so we use
-// htonl() instead of "#define BYTE_SWAP_64(x) htonll (x)".
-#define BYTE_SWAP_64(x)                                \
-  ((uint64_t(htonl((x)&0x00000000ffffffffUL)) << 32) | \
-   (htonl(((x)&0xffffffff00000000UL) >> 32)))
-
-#elif __BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__
-
-// On non-Linux, non-Windows, but little-endian, environments, use htonl/s,
-// which byte-swap when the host byte order is little-endian. POSIX doesn't
-// define a 64-bit version of these library functions, so we roll our own.
-#include <arpa/inet.h>
-#define BYTE_SWAP_16(x) htons(x)
-#define BYTE_SWAP_32(x) htonl(x)
-#define BYTE_SWAP_64(x)                                \
-  ((uint64_t(htonl((x)&0x00000000ffffffffUL)) << 32) | \
-   (htonl(((x)&0xffffffff00000000UL) >> 32)))
-
-#else  // not defined(__linux__) and not defined(PLATFORM_WINDOWS)
-       // and (__BYTE_ORDER__ != __ORDER_LITTLE_ENDIAN__)
-
-// Fall back on a non-optimized implementation on other big-endian targets.
-// This code swaps one byte at a time and is probably an order of magnitude
-// slower.
-
-#define BYTE_SWAP_16(x) ((((x)&0x00ff) << 8) | (((x)&0xff00) >> 8))
-
-#define BYTE_SWAP_32(x)                                   \
-  ((((x)&0x000000ffU) << 24) | (((x)&0x0000ff00U) << 8) | \
-   (((x)&0x00ff0000U) >> 8) | (((x)&0xff000000U) >> 24))
-
-#define BYTE_SWAP_64(x)                                                      \
-  ((((x)&0x00000000000000ffUL) << 56) | (((x)&0x000000000000ff00UL) << 40) | \
-   (((x)&0x0000000000ff0000UL) << 24) | (((x)&0x00000000ff000000UL) << 8) |  \
-   (((x)&0x000000ff00000000UL) >> 8) | (((x)&0x0000ff0000000000UL) >> 24) |  \
-   (((x)&0x00ff000000000000UL) >> 40) | (((x)&0xff00000000000000UL) >> 56))
-
-#endif  // defined(__linux__)
+#include "tensorflow/core/util/tensor_bundle/byte_swap_array.h"
 
 namespace tensorflow {
 
-// Byte-swap an entire array of atomic C/C++ types in place.
-//
-// Note: When calling this function on arrays of std::complex<> types,
-// multiply the number of elements by 2 and divide the bytes per element by 2.
-//
-// Args:
-//  array: Pointer to the beginning of the array
-//  bytes_per_elem: Number of bytes in each element of the array
-//  array_len: Number of elements in the array
-//
-// Returns: Status::OK() on success, -1 otherwise
-//
-Status ByteSwapArray(char *array, size_t bytes_per_elem, int array_len);
-
 // Byte-swap a tensor's backing buffer in place.
 //
 // Args:
diff --git a/tensorflow/core/util/tensor_bundle/byte_swap_array.cc b/tensorflow/core/util/tensor_bundle/byte_swap_array.cc
new file mode 100644
index 00000000000..f7db421d3fc
--- /dev/null
+++ b/tensorflow/core/util/tensor_bundle/byte_swap_array.cc
@@ -0,0 +1,48 @@
+/* Copyright 2019 The TensorFlow Authors. All Rights Reserved.
+
+Licensed under the Apache License, Version 2.0 (the "License");
+you may not use this file except in compliance with the License.
+You may obtain a copy of the License at
+
+http://www.apache.org/licenses/LICENSE-2.0
+
+Unless required by applicable law or agreed to in writing, software
+distributed under the License is distributed on an "AS IS" BASIS,
+WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+See the License for the specific language governing permissions and
+limitations under the License.
+==============================================================================*/
+
+#include "tensorflow/core/util/tensor_bundle/byte_swap_array.h"
+
+namespace tensorflow {
+
+Status ByteSwapArray(char* array, size_t bytes_per_elem, int array_len) {
+  if (bytes_per_elem == 1) {
+    // No-op
+    return Status::OK();
+  } else if (bytes_per_elem == 2) {
+    auto array_16 = reinterpret_cast<uint16_t*>(array);
+    for (int i = 0; i < array_len; i++) {
+      array_16[i] = BYTE_SWAP_16(array_16[i]);
+    }
+    return Status::OK();
+  } else if (bytes_per_elem == 4) {
+    auto array_32 = reinterpret_cast<uint32_t*>(array);
+    for (int i = 0; i < array_len; i++) {
+      array_32[i] = BYTE_SWAP_32(array_32[i]);
+    }
+    return Status::OK();
+  } else if (bytes_per_elem == 8) {
+    auto array_64 = reinterpret_cast<uint64_t*>(array);
+    for (int i = 0; i < array_len; i++) {
+      array_64[i] = BYTE_SWAP_64(array_64[i]);
+    }
+    return Status::OK();
+  } else {
+    return errors::Unimplemented("Byte-swapping of ", bytes_per_elem,
+                                 "-byte values not supported.");
+  }
+}
+
+}  // namespace tensorflow
\ No newline at end of file
diff --git a/tensorflow/core/util/tensor_bundle/byte_swap.h b/tensorflow/core/util/tensor_bundle/byte_swap_array.h
similarity index 83%
copy from tensorflow/core/util/tensor_bundle/byte_swap.h
copy to tensorflow/core/util/tensor_bundle/byte_swap_array.h
index a51153385f8..7dd97630925 100644
--- a/tensorflow/core/util/tensor_bundle/byte_swap.h
+++ b/tensorflow/core/util/tensor_bundle/byte_swap_array.h
@@ -13,13 +13,12 @@ See the License for the specific language governing permissions and
 limitations under the License.
 ==============================================================================*/
 
-#ifndef TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_H_
-#define TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_H_
+#ifndef TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_ARRAY_H_
+#define TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_ARRAY_H_
 
-#include "tensorflow/core/framework/tensor.h"
-#include "tensorflow/core/lib/core/status.h"
 #include "tensorflow/core/platform/byte_order.h"
-#include "tensorflow/core/protobuf/meta_graph.pb.h"
+#include "tensorflow/core/platform/errors.h"
+#include "tensorflow/core/platform/status.h"
 
 // Define basic byte swapping operations.
 // These operations must be macros to use compiler intrinsics.
@@ -100,18 +99,6 @@ namespace tensorflow {
 //
 Status ByteSwapArray(char *array, size_t bytes_per_elem, int array_len);
 
-// Byte-swap a tensor's backing buffer in place.
-//
-// Args:
-//  t: Tensor to be modified IN PLACE. Any tensors that share a backing
-//     buffer with this one will also end up byte-swapped.
-// Returns: Status::OK() on success, -1 otherwise
-// TODO(frreiss): Should this be a member of the Tensor class?
-Status ByteSwapTensor(Tensor *t);
-
-// Swap tensor_content field of Const Op Tensors in the named functions
-Status ByteSwapTensorContent(MetaGraphDef *meta_graph_def);
-
 }  // namespace tensorflow
 
-#endif  // TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_H_
+#endif  // TENSORFLOW_CORE_UTIL_TENSOR_BUNDLE_BYTE_SWAP_ARRAY_H_
