diff --git a/package.json b/package.json
index 45c10368fe2..7b2ff9d9cff 100644
--- a/package.json
+++ b/package.json
@@ -412,7 +412,7 @@
     "@types/chance": "^1.0.0",
     "@types/cheerio": "^0.22.10",
     "@types/chroma-js": "^1.4.2",
-    "@types/chromedriver": "^81.0.0",
+    "@types/chromedriver": "^2.38.0",
     "@types/classnames": "^2.2.9",
     "@types/cmd-shim": "^2.0.0",
     "@types/color": "^3.0.0",
@@ -596,7 +596,7 @@
     "callsites": "^3.1.0",
     "chai": "3.5.0",
     "chance": "1.0.18",
-    "chromedriver": "^89.0.0",
+    "chromedriver": "2.33.2",
     "clean-webpack-plugin": "^3.0.0",
     "cmd-shim": "^2.1.0",
     "compare-versions": "3.5.1",
diff --git a/src/dev/build/lib/platform.ts b/src/dev/build/lib/platform.ts
index 2df7801ffc1..df70c9aa023 100644
--- a/src/dev/build/lib/platform.ts
+++ b/src/dev/build/lib/platform.ts
@@ -7,7 +7,7 @@
  */
 
 export type PlatformName = 'win32' | 'darwin' | 'linux';
-export type PlatformArchitecture = 'x64' | 'arm64';
+export type PlatformArchitecture = 'x64' | 'arm64' | 's390x';
 
 export class Platform {
   constructor(
@@ -48,6 +48,7 @@ export class Platform {
 export const ALL_PLATFORMS = [
   new Platform('linux', 'x64', 'linux-x86_64'),
   new Platform('linux', 'arm64', 'linux-aarch64'),
+  new Platform('linux', 's390x', 'linux-s390x'),
   new Platform('darwin', 'x64', 'darwin-x86_64'),
   new Platform('win32', 'x64', 'windows-x86_64'),
 ];
diff --git a/src/dev/build/tasks/nodejs/node_download_info.ts b/src/dev/build/tasks/nodejs/node_download_info.ts
index 821cdb6973c..a1f5e304f42 100644
--- a/src/dev/build/tasks/nodejs/node_download_info.ts
+++ b/src/dev/build/tasks/nodejs/node_download_info.ts
@@ -18,7 +18,7 @@ export function getNodeDownloadInfo(config: Config, platform: Platform) {
     ? 'win-x64/node.exe'
     : `node-v${version}-${arch}.tar.gz`;
 
-  const url = `https://us-central1-elastic-kibana-184716.cloudfunctions.net/kibana-ci-proxy-cache/dist/v${version}/${downloadName}`;
+  const url = `https://nodejs.org/dist/v${version}/${downloadName}`;
   const downloadPath = config.resolveFromRepo('.node_binaries', version, basename(downloadName));
   const extractDir = config.resolveFromRepo('.node_binaries', version, arch);
 
diff --git a/src/dev/build/tasks/patch_native_modules_task.ts b/src/dev/build/tasks/patch_native_modules_task.ts
index 7fb4ffed6fb..d08e1e29ae3 100644
--- a/src/dev/build/tasks/patch_native_modules_task.ts
+++ b/src/dev/build/tasks/patch_native_modules_task.ts
@@ -12,6 +12,9 @@ import { ToolingLog } from '@kbn/dev-utils';
 
 import { deleteAll, download, gunzip, untar, Task, Config, Build, Platform, read } from '../lib';
 
+const zUrl = require('url');
+var zFile:string = zUrl.pathToFileURL('linux-s390x-83.gz').toString();
+
 const DOWNLOAD_DIRECTORY = '.native_modules';
 
 interface Package {
@@ -58,6 +61,9 @@ const packages: Package[] = [
           'https://storage.googleapis.com/kibana-ci-proxy-cache/node-re2/uhop/node-re2/releases/download/1.15.4/linux-arm64-83.gz',
         sha256: '4eb524ca9a79dea9c07342e487fbe91591166fdbc022ae987104840df948a4e9',
       },
+      'linux-s390x': {
+        url: zFile,
+      },
       'win32-x64': {
         url: 'https://github.com/uhop/node-re2/releases/download/1.15.4/win32-x64-83.gz',
         sha256: 'efe939d3cda1d64ee3ee3e60a20613b95166d55632e702c670763ea7e69fca06',
@@ -96,13 +102,18 @@ async function patchModule(
   log.debug(`Patching ${pkg.name} binaries from ${archive.url} to ${extractPath}`);
 
   await deleteAll([extractPath], log);
-  await download({
-    log,
-    url: archive.url,
-    destination: downloadPath,
-    sha256: archive.sha256,
-    retries: 3,
-  });
+  if (platformName == "linux-s390x") {
+         console.log("Using locally built re2");
+  }
+  else {
+    await download({
+      log,
+      url: archive.url,
+      destination: downloadPath,
+      sha256: archive.sha256,
+      retries: 3,
+    });
+  }
   switch (pkg.extractMethod) {
     case 'gunzip':
       await gunzip(downloadPath, extractPath);
