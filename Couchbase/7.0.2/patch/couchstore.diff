diff --git a/CMakeLists.txt b/CMakeLists.txt
index d269d2f..97fee6e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -138,8 +138,10 @@ ADD_LIBRARY(couchstore_views SHARED
             $<TARGET_OBJECTS:couchstore_objs>
             $<TARGET_OBJECTS:couchstore_view_objs>)
 SET(COUCHSTORE_VIEW_LIBS ${COUCHSTORE_LIBS} ${V8_LIBRARIES} ${ICU_LIBRARIES})
+message(STATUS "Couchstore view libs are ${COUCHSTORE_VIEW_LIBS}")
 TARGET_LINK_LIBRARIES(couchstore_views ${COUCHSTORE_VIEW_LIBS})
-TARGET_INCLUDE_DIRECTORIES(couchstore_views PUBLIC ${CMAKE_CURRENT_BINARY_DIR}/include)
+TARGET_INCLUDE_DIRECTORIES(couchstore_views PUBLIC ${CMAKE_CURRENT_BINARY_DIR}/include
+                                                  /usr/local/include)
 
 ADD_EXECUTABLE(couch_dbdump
                src/dbdump.cc
diff --git a/src/crc32.cc b/src/crc32.cc
index 4ed70fb..b0d74a1 100644
--- a/src/crc32.cc
+++ b/src/crc32.cc
@@ -107,7 +107,7 @@ int perform_integrity_check(const uint8_t* buf,
                             crc_mode_e mode) {
     bool success = false;
     if (mode == CRC_UNKNOWN || mode == CRC32C) {
-        success = checksum == crc32c(buf, buf_len, 0);
+        success = checksum == crc32c_other(buf, buf_len, 0);
         if (!success && mode == CRC_UNKNOWN) {
             success = checksum == hash_crc32(buf, buf_len);
         }
@@ -126,7 +126,7 @@ uint32_t get_checksum(const uint8_t* buf,
                       size_t buf_len,
                       crc_mode_e mode) {
     if (mode == CRC32C) {
-        return crc32c(buf, buf_len, 0);
+        return crc32c_other(buf, buf_len, 0);
     } else {
         cb_assert(mode == CRC32);
         return hash_crc32(buf, buf_len);
diff --git a/src/views/bin/couch_view_file_merger.cc b/src/views/bin/couch_view_file_merger.cc
index 50380c9..cdc6607 100644
--- a/src/views/bin/couch_view_file_merger.cc
+++ b/src/views/bin/couch_view_file_merger.cc
@@ -34,7 +34,7 @@
 #define LINE_BUF_SIZE (8 * 1024)
 #define MERGE_ERROR_CODE(Err) (100 + (Err))
 
-typedef enum {
+typedef enum : char {
     MERGE_FILE_TYPE_ID_BTREE = 'i',
     MERGE_FILE_TYPE_MAPREDUCE_VIEW = 'v',
     MERGE_FILE_TYPE_SPATIAL = 's'
diff --git a/tests/views/index_headers.cc b/tests/views/index_headers.cc
index c7a91c6..4f4c1d5 100644
--- a/tests/views/index_headers.cc
+++ b/tests/views/index_headers.cc
@@ -339,6 +339,7 @@ void test_index_headers_v1(void)
     char* header_bin3 = nullptr;
     size_t header_bin3_size = 0;
 
+#if !__s390x__
     unsigned char header_bin[] = {
         5,226,251,160,170,107,207,39,248,218,139,62,137,58,95,46,204,10,12,1,0,64,0,
         254,1,0,218,1,0,0,136,5,1,4,0,136,254,127,0,218,127,0,8,0,83,119,9,1,254,128,
@@ -356,6 +357,28 @@ void test_index_headers_v1(void)
         0,254,154,0,46,154,0,112,1,0,4,0,5,0,10,0,60,0,62,0,2,0,11,0,15,0,2,0,58,0,
         61,0,2,0,15,0,58,105,173,44,0,0,4,197,0,63,0,0,0,0,4,197
     };
+#else
+    unsigned char header_bin[] = {
+        5,226,251,160,170,107,207,39,248,218,139,62,137,58,95,46,204,10,12,1,0,64,0,
+        254,1,0,218,1,0,0,136,5,1,4,0,136,254,127,0,218,127,0,8,0,83,119,9,1,254,128,
+        0,222,128,0,0,36,5,121,20,136,0,0,58,0,1,1,11,12,4,197,0,2,13,8,0,3,13,
+        8,0,4,13,8,0,5,13,8,0,6,13,8,0,7,13,8,0,8,13,8,0,9,13,8,0,10,
+        13,8,0,12,13,8,0,13,13,8,0,14,13,8,0,16,13,8,0,17,13,8,0,18,
+        13,8,0,19,13,8,0,20,13,8,0,21,13,8,0,22,13,8,0,23,13,8,0,24,
+        13,8,0,25,13,8,0,26,13,8,0,27,13,8,0,28,13,8,0,29,13,8,0,30,
+        13,8,0,31,13,8,0,32,13,8,0,33,13,8,0,34,13,8,0,35,13,8,37,19,
+        12,4,197,0,37,13,16,0,38,13,8,0,39,13,8,0,40,13,8,0,41,13,8,0,
+        42,13,8,0,43,13,8,0,44,13,8,0,45,13,8,0,46,13,8,0,47,13,8,0,
+        48,13,8,0,49,13,8,0,50,13,8,0,51,13,8,0,52,13,8,0,53,13,8,0,
+        54,13,8,0,55,13,8,0,56,13,8,0,57,13,8,0,59,13,8,0,60,13,8,0,
+        62,13,8,64,145,0,0,0,24,174,99,0,0,0,19,159,140,0,0,1,49,254,101,3,
+        226,101,3,0,255,13,1,32,2,0,152,0,0,0,44,71,93,1,148,4,152,106,254,148,
+        0,254,148,0,5,148,24,0,5,55,56,49,52,52,5,154,8,63,200,207,1,154,4,129,
+        243,254,154,0,254,154,0,46,154,0,112,1,0,4,0,5,0,10,0,60,0,62,0,2,
+        0,11,0,15,0,2,0,58,0,61,0,2,0,15,0,58,105,173,44,0,0,4,197,0,
+        63,0,0,0,0,4,197
+    };
+#endif
 
     fprintf(stderr, "Decoding an index header v1...\n");
     header = test_index_header_decoding_v1((const char*)header_bin, sizeof(header_bin));
@@ -391,6 +414,7 @@ void test_index_headers_v2(void)
     char* header_bin3 = nullptr;
     size_t header_bin3_size = 0;
 
+#if !__s390x__
     unsigned char header_bin[] = {
         0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,237,14,12,2,0,32,0,254,1,0,234,1,0,12,1,32,0,
         24,254,127,0,234,127,0,16,0,144,0,64,34,254,128,0,238,128,0,12,0,0,32,4,61,
@@ -416,6 +440,38 @@ void test_index_headers_v2(void)
         92,62,36,0,0,27,58,36,0,129,120,62,36,0,0,28,54,36,0,133,148,62,36,0,0,29,58,
         36,0,129,176,62,36,0,0,30,58,36,0,129,204,62,36,0,0,31,58,36,0,0,193
     };
+#else
+    unsigned char header_bin[] = {
+        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,237,14,12,2,0,32,0,254,
+        1,0,234,1,0,12,1,32,0,24,254,127,0,234,127,0,16,0,144,0,64,34,254,128,
+        0,238,128,0,12,0,0,32,4,61,130,0,1,5,140,8,1,0,2,5,8,8,4,0,
+        3,5,8,8,9,0,4,5,8,8,16,0,5,5,8,8,25,0,6,5,8,8,36,0,
+        7,5,8,8,49,0,8,5,8,8,64,0,9,5,8,8,81,0,10,5,8,8,100,0,
+        11,5,8,8,121,0,12,5,8,8,144,0,13,5,8,8,169,0,14,5,8,8,196,0,
+        15,5,8,8,225,0,16,1,8,12,1,0,0,17,5,8,8,33,0,18,5,8,8,68,
+        0,19,5,8,8,105,0,20,5,8,8,144,0,21,5,8,8,185,0,22,5,8,8,228,
+        0,23,1,8,4,2,17,41,196,12,2,64,0,25,5,16,8,113,0,26,5,8,8,164,
+        0,27,5,8,8,217,0,28,1,8,12,3,16,0,29,5,8,8,73,0,30,5,8,8,
+        132,0,31,5,8,0,193,9,112,4,0,123,1,14,32,2,55,114,101,100,118,97,108,2,
+        9,125,4,9,41,1,21,4,3,21,9,21,0,50,9,21,4,13,128,1,21,4,34,197,
+        9,21,52,51,0,0,1,0,5,0,2,0,14,0,28,0,1,37,62,16,1,0,28,0,
+        2,53,62,17,102,65,234,32,2,97,117,117,105,100,49,50,51,1,66,1,1,28,97,110,
+        111,116,104,101,114,49,1,12,5,1,0,1,66,36,0,0,1,58,36,0,33,160,62,72,
+        0,0,2,58,36,0,33,188,62,36,0,0,3,58,36,0,33,216,62,36,0,0,4,58,
+        36,0,33,244,62,36,0,0,5,58,36,0,65,16,62,36,0,0,6,58,36,0,65,44,
+        62,36,0,0,7,58,36,0,65,72,62,36,0,0,8,58,36,0,65,100,62,36,0,0,
+        9,58,36,0,65,128,62,36,0,0,10,58,36,0,65,156,62,36,0,0,11,58,36,0,
+        8,121,0,12,66,36,0,0,12,58,36,0,65,212,62,72,0,0,13,58,36,0,65,240,
+        62,36,0,0,14,58,36,0,8,196,0,15,66,36,0,0,15,58,36,0,97,40,62,72,
+        0,0,16,54,36,0,101,68,62,36,0,0,17,58,36,0,97,96,62,36,0,0,18,58,
+        36,0,97,124,62,36,0,0,19,58,36,0,97,152,62,36,0,0,20,58,36,0,97,180,
+        62,36,0,0,21,58,36,0,97,208,62,36,0,0,22,58,36,0,8,228,0,23,66,36,
+        0,0,23,54,36,0,0,2,129,8,62,72,0,0,24,58,36,0,129,36,62,36,0,0,
+        25,58,36,0,129,64,62,36,0,0,26,58,36,0,129,92,62,36,0,0,27,58,36,0,
+        129,120,62,36,0,0,28,54,36,0,133,148,62,36,0,0,29,58,36,0,129,176,62,36,
+        0,0,30,58,36,0,129,204,62,36,0,0,31,58,36,0,0,193
+    };
+#endif
 
     fprintf(stderr, "Decoding an index header v2...\n");
     header = test_index_header_decoding_v2(
diff --git a/tests/views/spatial.cc b/tests/views/spatial.cc
index bd8524a..7be97c2 100644
--- a/tests/views/spatial.cc
+++ b/tests/views/spatial.cc
@@ -281,6 +281,7 @@ void test_encode_spatial_key()
     char encoded[66];
     double mbb[] = {6.3, 18.7};
     double mbb2[] = {1.0, 3.0, 30.33, 31.33, 15.4, 138.7, 7.8, 7.8};
+#if !__s390x__
     unsigned char expected[] = {
         0x00, 0x02, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x19, 0x40,
         0x33, 0x33, 0x33, 0x33, 0x33, 0xb3, 0x32, 0x40
@@ -294,6 +295,22 @@ void test_encode_spatial_key()
         0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x1f, 0x40, 0x33, 0x33,
         0x33, 0x33, 0x33, 0x33, 0x1f, 0x40
     };
+#else
+    unsigned char expected[] = {
+        0x00, 0x02, 0x40, 0x19, 0x33, 0x33, 0x33, 0x33,
+        0x33, 0x33, 0x40, 0x32, 0xb3, 0x33, 0x33, 0x33, 0x33, 0x33,
+    };
+    unsigned char expected2[] = {
+        0x00, 0x08, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00,
+        0x00, 0x00, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00,
+        0x00, 0x00, 0x40, 0x3e, 0x54, 0x7a, 0xe1, 0x47,
+        0xae, 0x14, 0x40, 0x3f, 0x54, 0x7a, 0xe1, 0x47,
+        0xae, 0x14, 0x40, 0x2e, 0xcc, 0xcc, 0xcc, 0xcc,
+        0xcc, 0xcd, 0x40, 0x61, 0x56, 0x66, 0x66, 0x66,
+        0x66, 0x66, 0x40, 0x1f, 0x33, 0x33, 0x33, 0x33,
+        0x33, 0x33, 0x40, 0x1f, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33
+    };
+#endif
 
     fprintf(stderr, "Running encode spatial key tests\n");
 
@@ -326,6 +343,7 @@ static bool is_double_array_equal(double *a, double *b, int len)
 void test_decode_spatial_key()
 {
     sized_mbb_t decoded;
+#if !__s390x__
     unsigned char mbb[] = {
         0x00, 0x02, 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x19, 0x40,
         0x33, 0x33, 0x33, 0x33, 0x33, 0xb3, 0x32, 0x40
@@ -339,6 +357,24 @@ void test_decode_spatial_key()
         0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0x1f, 0x40, 0x33, 0x33,
         0x33, 0x33, 0x33, 0x33, 0x1f, 0x40
     };
+#else
+    unsigned char mbb[] = {
+       0x00, 0x02, 0x40, 0x19, 0x33, 0x33, 0x33, 0x33,
+       0x33, 0x33, 0x40, 0x32, 0xb3, 0x33, 0x33, 0x33, 0x33, 0x33
+    };
+    unsigned char mbb2[] = {
+       0x00, 0x08, 0x3f, 0xf0, 0x00, 0x00, 0x00, 0x00,
+       0x00, 0x00, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00,
+       0x00, 0x00, 0x40, 0x3e, 0x54, 0x7a, 0xe1, 0x47,
+       0xae, 0x14, 0x40, 0x3f, 0x54, 0x7a, 0xe1, 0x47,
+       0xae, 0x14, 0x40, 0x2e, 0xcc, 0xcc, 0xcc, 0xcc,
+       0xcc, 0xcd, 0x40, 0x61, 0x56, 0x66, 0x66, 0x66,
+       0x66, 0x66, 0x40, 0x1f, 0x33, 0x33, 0x33, 0x33,
+       0x33, 0x33, 0x40, 0x1f, 0x33, 0x33, 0x33, 0x33,
+       0x33, 0x33
+    };
+
+#endif
     double expected[] = {6.3, 18.7};
     double expected2[] = {1.0, 3.0, 30.33, 31.33, 15.4, 138.7, 7.8, 7.8};

