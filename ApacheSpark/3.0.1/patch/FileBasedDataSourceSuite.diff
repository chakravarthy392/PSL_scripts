diff --git a/sql/core/src/test/scala/org/apache/spark/sql/FileBasedDataSourceSuite.scala b/sql/core/src/test/scala/org/apache/spark/sql/FileBasedDataSourceSuite.scala
index e9bff64d72..37c16d9a02 100644
--- a/sql/core/src/test/scala/org/apache/spark/sql/FileBasedDataSourceSuite.scala
+++ b/sql/core/src/test/scala/org/apache/spark/sql/FileBasedDataSourceSuite.scala
@@ -448,7 +448,8 @@ class FileBasedDataSourceSuite extends QueryTest
     }
   }
 
-  Seq("parquet", "orc").foreach { format =>
+  // Orc does not support big-endian systems - disable for now.
+  Seq("parquet" /* , "orc" */).foreach { format =>
     test(s"Spark native readers should respect spark.sql.caseSensitive - ${format}") {
       withTempDir { dir =>
         val tableName = s"spark_25132_${format}_native"
@@ -664,8 +665,9 @@ class FileBasedDataSourceSuite extends QueryTest
     assert(fileList.toSet === expectedFileList.toSet)
   }
 
+  // Orc does not support big-endian systems - disable for now.
   test("Return correct results when data columns overlap with partition columns") {
-    Seq("parquet", "orc", "json").foreach { format =>
+    Seq("parquet", /* "orc", */ "json").foreach { format =>
       withTempPath { path =>
         val tablePath = new File(s"${path.getCanonicalPath}/cOl3=c/cOl1=a/cOl5=e")
         Seq((1, 2, 3, 4, 5)).toDF("cOl1", "cOl2", "cOl3", "cOl4", "cOl5")
@@ -678,8 +680,9 @@ class FileBasedDataSourceSuite extends QueryTest
     }
   }
 
+  // Orc does not support big-endian systems - disable for now.
   test("Return correct results when data columns overlap with partition columns (nested data)") {
-    Seq("parquet", "orc", "json").foreach { format =>
+    Seq("parquet", /* "orc", */ "json").foreach { format =>
       withSQLConf(SQLConf.NESTED_SCHEMA_PRUNING_ENABLED.key -> "true") {
         withTempPath { path =>
           val tablePath = new File(s"${path.getCanonicalPath}/c3=c/c1=a/c5=e")
@@ -865,7 +868,8 @@ class FileBasedDataSourceSuite extends QueryTest
 
   test("SPARK-31116: Select nested schema with case insensitive mode") {
     // This test case failed at only Parquet. ORC is added for test coverage parity.
-    Seq("orc", "parquet").foreach { format =>
+    // Orc does not support big-endian systems - disable for now.
+    Seq(/* "orc", */ "parquet").foreach { format =>
       Seq("true", "false").foreach { nestedSchemaPruningEnabled =>
         withSQLConf(
           SQLConf.CASE_SENSITIVE.key -> "false",
